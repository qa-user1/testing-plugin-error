  name: Cypress Tests
  on:
    # schedule:
    #  - cron: '0 4 * * *'
    [ push ]

  permissions: write-all
  
  env:
    #CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
    BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
    AWS_ACCESS_ID: ${{ secrets.AWS_ACCESS_ID }}
    AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}


  jobs:

    clear-previous-reports:
      runs-on: ubuntu-latest
      timeout-minutes: 250
      if: always()
      strategy:
        fail-fast: false
      steps:
        - uses: actions/checkout@v2
          with:
            ref: gh-pages
        - name: remove previous reports
          run: |
            mkdir emptyFolder
        - name: Deploy blank report folder temp reports branch
          uses: peaceiris/actions-gh-pages@v2
          with:
            keepFiles: false
          env:
            PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            PUBLISH_BRANCH: gh-pages
            PUBLISH_DIR: emptyFolder

    Run-Clear-Gmail:
      name: Clear Gmail
      if: success() || failure()
      runs-on: ubuntu-latest
      timeout-minutes: 40
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v3
        - run: npm i
        - run: npm run clearGmail


    Run-Cypress-Test15:
      name: Cypress Test 15
      if: success() || failure()
      runs-on: ubuntu-latest
      timeout-minutes: 40
      # needs: [ Run-Cypress-Test1 ]
      container:
        image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
        options: --user 1001
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v3
        - run: npm i

        - uses: nick-invision/retry@v2
          with:
            timeout_minutes: 10
            max_attempts: 3
            command: npm run e2e-test15
          env:
            ACCOUNT_SID: ${{ secrets.ACCOUNT_SID }}
            AUTH_TOKEN: ${{ secrets.AUTH_TOKEN }}

        - name: Deploy report to temp-reports branch
          if: always()
          uses: peaceiris/actions-gh-pages@v2
          with:
            keepFiles: true
          env:
            PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            PUBLISH_BRANCH: gh-pages
            PUBLISH_DIR: report





        - run: |
            mkdir report/S3_bucket
            mv S3_bucket/* report/S3_bucket
            mv mainScript.js report

        - name: Deploy report to temp-reports branch
          if: always()
          uses: peaceiris/actions-gh-pages@v2
          with:
            keepFiles: true
          env:
            PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            PUBLISH_BRANCH: gh-pages
            PUBLISH_DIR: report

    Run-Cypress-Test21:
      name: Cypress Test 21
      if: success() || failure()
      runs-on: ubuntu-latest
      timeout-minutes: 40
     # needs: [ Run-Cypress-Test20 ]
      container:
        image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
        options: --user 1001
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v3
        - run: npm i
        - uses: nick-invision/retry@v2
          with:
            timeout_minutes: 10
            max_attempts: 3
            command: npm run e2e-test21

        - name: Deploy report to temp-reports branch
          if: always()
          uses: peaceiris/actions-gh-pages@v2
          with:
            keepFiles: true
          env:
            PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            PUBLISH_BRANCH: gh-pages
            PUBLISH_DIR: report

    merge-and-deploy-final-report:
      runs-on: ubuntu-latest
      timeout-minutes: 250
      continue-on-error: true
      needs: [Run-Cypress-Test15, Run-Cypress-Test21 ]
      if: always()
      strategy:
        fail-fast: false
      steps:
        - uses: actions/checkout@v2
          with:
            ref: gh-pages
        - name: Install dependencies
          run: |
            git config --global http.postBuffer 157286400
            npm init --yes
            npm i allure-commandline --save-dev
            
            mkdir allure-results
            mkdir allure-results-failed
            
    
            if [ -d "allure-results-15" ]; then
            mv allure-results-15/* allure-results
            fi
            
            if [ -d "allure-results-21" ]; then
            mv allure-results-21/* allure-results
            fi
            
            

        - name: Set up environment variable
          id: set_date
          run: echo "NOW=$(date +'%B_%d')" >> $GITHUB_ENV

        - uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '17'


        - name: Generate Allure Report for all tests
          if: always()
          run: |
            node_modules/allure-commandline/dist/bin/allure generate allure-results -o report/all-tests

        


        - name: Deploy all tests report to external repository
          uses: cpina/github-action-push-to-another-repository@main
          env:
            API_TOKEN_GITHUB: ${{ secrets.EXTERNAL_REPOSITORY_PERSONAL_ACCESS_TOKEN }}
            NOW: ${{ env.NOW }}
          with:
            source-directory: report/all-tests
            destination-github-username: 'Nucleus-Reports'
            destination-repository-name: 'report_${{ env.NOW }}'
            user-email: 'qa-user1'
            target-branch: "main"

        - name: Generate Allure Report for failed tests
          if: always()
          run: |
              node_modules/allure-commandline/dist/bin/allure generate allure-results --only-failed -o report/failed-tests

        - name: Deploy failed tests report to external repository
          uses: cpina/github-action-push-to-another-repository@main
          env:
            API_TOKEN_GITHUB: ${{ secrets.EXTERNAL_REPOSITORY_PERSONAL_ACCESS_TOKEN }}
            NOW: ${{ env.NOW }}
          with:
            source-directory: report/failed-tests
            destination-github-username: 'Nucleus-Reports'
            destination-repository-name: 'report_failed_${{ env.NOW }}'
            user-email: 'qa-user1'
            target-branch: "main"

        - name: Get report URL
          id: report_url
          run: |
              echo "Report URL: https://nucleus-reports.github.io/report_failed_${{ env.NOW }}"
              echo "::set-output name=url::https://nucleus-reports.github.io/report_failed_${{ env.NOW }}"

        - name: Send email with Allure report for failed tests
          run: |
                  
                  npm install nodemailer
                  mkdir report/failedTests
                  mv sendEmailAllureReport.js report
                  
                  node .github/actions-scripts/sendEmailAllureReport.js
                  

    slack-notification:

      name: Notify on Slack
      runs-on: ubuntu-latest
      if: always()
      needs: [ Run-Cypress-Test15 ]

      steps:
        - name: Set up environment variable
          id: set_date
          run: echo "NOW=$(date +'%B_%d')" >> $GITHUB_ENV

        - uses: abinoda/slack-action@master
          env:
            SLACK_BOT_TOKEN: ${{secrets.SLACK_BOT_TOKEN }}
            NOW: ${{ env.NOW }}
          with:
            args: '{\"channel\":\"${{ secrets.SLACK_PR_CHANNEL_ID }}\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Automated test report* https://nucleus-reports.github.io/report_${{ env.NOW }}  \"}}]}'
