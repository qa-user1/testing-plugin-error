name: Cypress Tests

  # runs tests every day at 4am
  # schedule:
#  - cron: '0 4 * * *'
on: [ push ]

permissions: write-all

jobs:

  clear-previous-reports:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    if: always()
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: remove previous reports
        run: |
          mkdir emptyFolder
      - name: Deploy blank report folder temp reports branch
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: false
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: emptyFolder

  Run-Clear-Gmail:
    name: Clear Gmail
    if: success() || failure()
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
      - run: npm i
      - run: npm run clearGmail


  Run-Cypress-Test5:
    name: Cypress Test 1
    if: success() || failure()
    runs-on: ubuntu-latest
    timeout-minutes: 40
    container:
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      options: --user 1001
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
      - run: npm i
      - run: npm run e2e-test5
      - run:  mv S3_bucket/* report
      - run:  mv mainScript.js report

      - name: Deploy report to temp-reports branch
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: true
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: report


  merge-and-deploy-final-report:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    continue-on-error: true
    needs: [Run-Cypress-Test5]
    if: always()
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Install dependencies
        run: |
          git config --global http.postBuffer 157286400
          npm init --yes
          npm i allure-commandline --save-dev
          mkdir allure-results
           
          if [ -d "allure-results-5" ]; then
          mv allure-results-5/* allure-results
          fi

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Generate Allure Report
        if: always()
        run: |
          node_modules/allure-commandline/dist/bin/allure generate  allure-results -o report
      - name: Deploy report to Github Pages directory
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: false
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: report
      - name: Upload artifacts to S3
        run: |
          node mainScript.js



