  name: Cypress Tests
  on:
    # schedule:
    #  - cron: '0 4 * * *'
    [ push ]

  permissions: write-all

  env:
    #CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
    BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
    AWS_ACCESS_ID: ${{ secrets.AWS_ACCESS_ID }}
    AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}


  jobs:

    merge-and-deploy-final-report:
      runs-on: ubuntu-latest
      timeout-minutes: 250
      continue-on-error: true
      if: always()
      strategy:
        fail-fast: false
      steps:
        - uses: actions/checkout@v2
          with:
            ref: gh-pages
        - name: Install dependencies
          run: |
            git config --global http.postBuffer 157286400
            npm init --yes
            npm i allure-commandline --save-dev
            
            mkdir allure-results
            mkdir allure-results-failed
            
            sudo apt-get install -y jq
            
            if [ -d "allure-results-15" ]; then
            mv allure-results-15/* allure-results
            fi
            
            jq 'select(.status=="failed")' allure-results/*.json > allure-results-failed/failed-tests.json

        - name: Set up environment variable
          id: set_date
          run: echo "NOW=$(date +'%B_%d')" >> $GITHUB_ENV

        - uses: actions/setup-java@v3
          with:
            distribution: 'temurin'
            java-version: '17'


        - name: Generate Allure Report for all tests
          if: always()
          run: |
              node_modules/allure-commandline/dist/bin/allure generate allure-results -o report/all-tests

        - name: Generate Allure Report for failed tests
          if: always()
          run: |
                node_modules/allure-commandline/dist/bin/allure generate allure-results-failed -o report/failed-tests

        - name: Deploy all tests report to external repository
          uses: cpina/github-action-push-to-another-repository@main
          env:
              API_TOKEN_GITHUB: ${{ secrets.EXTERNAL_REPOSITORY_PERSONAL_ACCESS_TOKEN }}
              NOW: ${{ env.NOW }}
          with:
              source-directory: report/all-tests
              destination-github-username: 'Nucleus-Reports'
              destination-repository-name: 'report_${{ env.NOW }}'
              user-email: 'qa-user1'
              target-branch: "main"

        - name: Deploy failed tests report to external repository
          uses: cpina/github-action-push-to-another-repository@main
          env:
              API_TOKEN_GITHUB: ${{ secrets.EXTERNAL_REPOSITORY_PERSONAL_ACCESS_TOKEN }}
              NOW: ${{ env.NOW }}
          with:
              source-directory: report/failed-tests
              destination-github-username: 'Nucleus-Reports'
              destination-repository-name: 'report_failed_${{ env.NOW }}'
              user-email: 'qa-user1'
              target-branch: "main"
