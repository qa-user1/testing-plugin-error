name: Cypress Tests

on: [ push ]

permissions: write-all

jobs:

  clear-previous-reports:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    if: always()
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: remove previous reports
        run: |
          mkdir emptyFolder
      - name: Deploy blank report folder temp reports branch
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: false
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: emptyFolder

  Run-Cypress-Test15:
    name: Cypress Test 15
    if: success() || failure()
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
      - run: npm i
      - run: npm run e2e-test15
      - name: Deploy report to temp-reports branch
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: true
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: report

  Run-Cypress-Test2:
    name: Cypress Test 2
    if: success() || failure()
    runs-on: ubuntu-latest
    timeout-minutes: 40
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
      - run: npm i
      - run: npm run e2e-test2
      - name: Deploy report to temp-reports branch
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: true
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: report

  merge-and-deploy-final-report:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    needs: [Run-Cypress-Test15]
    if: always()
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages
      - name: Install dependencies
        run: |
          npm init --yes
          npm i allure-commandline --save-dev
       #   mkdir allure-results

       #   mv allure-results-1/* allure-results
      #    mv allure-results-2/* allure-results
       #   mv allure-results-3/* allure-results1
        #  mv allure-results-4/* allure-results 1

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Generate Allure Report
        if: always()
        run: |
          node_modules/allure-commandline/dist/bin/allure generate  allure-results -o report
      - name: Deploy report to Github Pages directory
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: false
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: report

  slack-notification:
    name: Notify on Slack
    runs-on: ubuntu-latest
    if: always()
    needs: [Run-Cypress-Test15, Run-Cypress-Test2]

    steps:
      - uses: abinoda/slack-action@master
        env:
          SLACK_BOT_TOKEN: ${{secrets.SLACK_BOT_TOKEN }}
        with:
          # custom message to send to slack
          args: '{\"channel\":\"${{ secrets.SLACK_PR_CHANNEL_ID }}\",\"blocks\":[{\"type\":\"section\",\"text\":{\"type\":\"mrkdwn\",\"text\":\"*Automated test report* https://qa-user1/testing-plugin-error/  \"}}]}'

